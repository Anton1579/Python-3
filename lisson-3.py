# 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя,
# предусмотреть обработку ситуации деления на ноль.

def my_func(x, y):
     try:
        z = x / y
        return z
     except ZeroDivisionError:
        return 'на 0 не делится'

x = int(input('Enter x = '))
y = int(input('Enter y = '))
print(my_func(x, y))

# 2. Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.




def my_func(name, surname, year, city, email, telephone):
    print('surname' ,surname,'|' 'name' ,name,'|' 'year' ,year,'|' 'city' ,city,'|' 'email' ,email,'|' 'telephone' ,telephone,)


name = input('enter name: ')
surname = input('enter surname: ')
year = int(input('enter year: '))
city = input('enter city: ')
email = input('enter email: ')
telephone = input('input telephone: ')

my_func(name, surname, year, city, email, telephone)


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.


def my_func(a, b, c):
    if a > c or a > b:
        print(a)
    elif b > a or b > c:
        print(b)
    elif c > a or c > b:
        print(c)


a = int(input('Enter a = '))
b = int(input('Enter b = '))
c = int(input('Enter c = '))

my_func(a, b, c)

# 4. Программа принимает действительное положительное число x
# и целое отрицательное число y. Необходимо выполнить
# возведение числа x в степень y. Задание необходимо реализовать
# в виде функции my_func(x, y). При решении задания необходимо
# обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора *.
# Второй — более сложная реализация без оператора *,
# предусматривающая использование цикла.

# def my_func(x, y):


def my_func(x, y):
    sam = x ** y
    return sam



x = int(input('x = '))
y = int(input('y = '))
asm = my_func(x, y)

print(asm)


# Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input('Введите цифры или A для выхода - ').split()

        res = 0
        for el in range(len(number)):
            if number[el] == 'a' or number[el] == 'A':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'Текущая сумма {sum_res}')
    print(f'Ваша окончательная сумма {sum_res}')


my_sum()

# Реализовать функцию int_func(), принимающую слово из маленьких
# латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать
# строка из слов, разделенных пробелом. Каждое слово состоит
# из латинских букв в нижнем регистре. Сделать вывод исходной
# строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func (*args):
    word = input('Ведите слово: ')
    print(word.title())
    return
int_func()